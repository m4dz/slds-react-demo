{"version":3,"sources":["components/Accordions.js","components/Buttons.js","components/Tabs.js","App.js","index.js"],"names":["Accordions","props","state","expandedPanels","items","id","summary","details","selectedItem","align","assistiveText","icon","buttonVariant","buttonClassName","iconCategory","iconName","iconVariant","onSelect","option","label","setState","filter","item","console","log","options","value","iconSize","event","data","this","action","dataAsArray","Object","keys","map","iconPath","i","expanded","panelContentActions","menuDropdown","onTogglePanel","togglePanel","React","Component","Buttons","className","onClick","e","target","variant","iconPosition","responsive","TabsSeparate","disabled","App","Tabs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a379b1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Accordion,\n  AccordionPanel,\n  IconSettings,\n  Dropdown,\n} from '@salesforce/design-system-react';\n\nclass Accordions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedPanels: {},\n      items: [\n        {\n          id: '1',\n          summary: 'Accordion Summary',\n          details: 'Accordion details - A',\n        },\n        {\n          id: '2',\n          summary: 'Accordion Summary',\n          details: 'Accordion details - B',\n        },\n        {\n          id: '3',\n          summary: 'Accordion Summary',\n          details: 'Accordion details - C',\n        },\n      ],\n    };\n  }\n\n  menuDropdown(selectedItem) {\n    return (\n      <Dropdown\n        align='right'\n        id={selectedItem.id}\n        assistiveText={{ icon: 'More Options' }}\n        buttonVariant='icon'\n        buttonClassName='slds-shrink-none'\n        iconCategory='utility'\n        iconName='down'\n        iconVariant='border-filled'\n        onSelect={(option) => {\n          if (option.label === 'delete') {\n            this.setState((state) => ({\n              ...state,\n              items: state.items.filter((item) => item.id !== selectedItem.id),\n            }));\n          } else if (console) {\n            console.log('onSelect', option);\n          }\n        }}\n        options={[\n          {\n            label: 'delete',\n            value: 'A0',\n          },\n          {\n            label: 'redo',\n            value: 'B0',\n          },\n          {\n            label: 'activate',\n            value: 'C0',\n          },\n        ]}\n        iconSize='x-small'\n      />\n    );\n  }\n\n  togglePanel(event, data) {\n    this.setState((state) => ({\n      ...state,\n      expandedPanels: {\n        [data.id]: !state.expandedPanels[data.id],\n      },\n    }));\n    if (this.props.action) {\n      const dataAsArray = Object.keys(data).map((id) => data[id]);\n      this.props.action('onClick')(event, ...dataAsArray);\n    } else if (console) {\n      console.log('[onSelect] (event, data)', event, data);\n    }\n  }\n\n  render() {\n    return (\n      <IconSettings iconPath='/icons'>\n        <h2>Accordions</h2>\n        <Accordion id='base-example-accordion'>\n          {this.state.items.map((item, i) => {\n            return (\n              <AccordionPanel\n                expanded={!!this.state.expandedPanels[item.id]}\n                id={item.id}\n                panelContentActions={this.menuDropdown(item)}\n                key={item.id}\n                onTogglePanel={(event) => this.togglePanel(event, item)}\n                summary={item.summary}>\n                {item.details}\n              </AccordionPanel>\n            );\n          })}\n        </Accordion>\n      </IconSettings>\n    );\n  }\n}\n\nexport default Accordions;\n","import React from 'react';\nimport { Button, IconSettings } from '@salesforce/design-system-react/';\n\nclass Buttons extends React.Component {\n  render() {\n    return (\n      <IconSettings iconPath='/icons'>\n        <div className='slds-x-small-buttons_horizontal'>\n          <h2>Buttons</h2>\n          <Button\n            label='Base'\n            onClick={(e) => {\n              console.log('Base Button e.target:', e.target);\n            }}\n            variant='base'\n          />\n\n          <Button label='Neutral' />\n\n          <Button\n            iconCategory='utility'\n            iconName='download'\n            iconPosition='left'\n            label='Neutral Icon'\n          />\n\n          <Button label='Responsive' responsive />\n        </div>\n      </IconSettings>\n    );\n  }\n}\n\nexport default Buttons;\n","import React from 'react';\nimport { IconSettings, Tabs, TabsPanel } from '@salesforce/design-system-react';\n\nclass TabsSeparate extends React.Component {\n  render() {\n    return (\n      <IconSettings iconPath='/icons'>\n        <h2>Tabs</h2>\n        <Tabs id='tabs-example-default'>\n          <TabsPanel label='Item One'>Item One Content</TabsPanel>\n          <TabsPanel label='Item Two'>Item Two Content</TabsPanel>\n          <TabsPanel label='Item Three'>Item Three Content</TabsPanel>\n          <TabsPanel disabled label='Disabled'>\n            Disabled Content\n          </TabsPanel>\n        </Tabs>\n      </IconSettings>\n    );\n  }\n}\n\nexport default TabsSeparate;\n","import './App.css';\nimport Accordions from './components/Accordions';\nimport Buttons from './components/Buttons';\nimport TabsSeparate from './components/Tabs';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <header className='app-header'>\n        <h1>Lightning Design System Demo!</h1>\n      </header>\n      <main className='grid-wrapper'>\n        <Buttons />\n        <Accordions />\n        <TabsSeparate />\n      </main>\n      <footer className='footer'>\n        <h3>Made with ❤️ by DeMars</h3>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}